name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          # Add any environment variables needed for build
          # Use secrets in GitHub repository settings
          VITE_API_URL: ${{ vars.VITE_API_URL || 'https://api.codemate.example.com' }}
          VITE_ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          
      # Create GitHub Pages required files manually (instead of using the script)
      - name: Create GitHub Pages files
        run: |
          # Create dist directory if it doesn't exist
          mkdir -p ./dist/public
          
          # Create 404.html
          cat > ./dist/public/404.html << 'EOL'
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8">
              <title>CodeMate - Redirecting</title>
              <script>
                // Single Page Apps for GitHub Pages
                var pathSegmentsToKeep = 1;
                var l = window.location;
                l.replace(
                  l.protocol + '//' + l.hostname + (l.port ? ':' + l.port : '') +
                  l.pathname.split('/').slice(0, 1 + pathSegmentsToKeep).join('/') + '/?/' +
                  l.pathname.slice(1).split('/').slice(pathSegmentsToKeep).join('/').replace(/&/g, '~and~') +
                  (l.search ? '&' + l.search.slice(1).replace(/&/g, '~and~') : '') +
                  l.hash
                );
              </script>
            </head>
            <body>
              Redirecting...
            </body>
          </html>
          EOL
          
          # Create .nojekyll file
          touch ./dist/public/.nojekyll
          
          # Modify index.html for SPA routing if it exists
          INDEX_FILE="./dist/public/index.html"
          if [[ -f "$INDEX_FILE" ]]; then
            # Create a temporary file for the modified content
            TEMP_FILE=$(mktemp)
            
            # Add the SPA redirect script after the head tag
            awk '/<head>/ {
              print $0;
              print "<!-- Start Single Page Apps for GitHub Pages -->";
              print "<script>";
              print "  (function(l) {";
              print "    if (l.search[1] === \"/\") {";
              print "      var decoded = l.search.slice(1).split(\"&\").map(function(s) {";
              print "        return s.replace(/~and~/g, \"&\")";
              print "      }).join(\"?\");";
              print "      window.history.replaceState(null, null,";
              print "        l.pathname.slice(0, -1) + decoded + l.hash";
              print "      );";
              print "    }";
              print "  }(window.location))";
              print "</script>";
              print "<!-- End Single Page Apps for GitHub Pages -->";
              next;
            }
            { print $0 }' "$INDEX_FILE" > "$TEMP_FILE"
            
            # Replace the original file with the modified one
            mv "$TEMP_FILE" "$INDEX_FILE"
            echo "Added SPA redirect script to index.html"
          else
            echo "Warning: Could not find index.html at $INDEX_FILE"
          fi
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/public'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2